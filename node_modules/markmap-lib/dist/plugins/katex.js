"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.transform = transform;
exports.name = void 0;

var _remarkableKatex = _interopRequireDefault(require("remarkable-katex"));

var _util = require("../util");

const name = 'katex';
exports.name = name;

function transform(transformHooks) {
  transformHooks.parser.tap((md, features) => {
    md.use(_remarkableKatex.default);
    md.renderer.rules.katex = (0, _util.wrapFunction)(md.renderer.rules.katex, {
      after: () => {
        features[name] = true;
      }
    });
  });
  return {
    styles: [{
      type: 'stylesheet',
      data: {
        href: 'https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css'
      }
    }],
    scripts: [{
      type: 'iife',
      data: {
        fn: (defer, getMarkmap) => {
          const deferred = defer();
          getMarkmap().registerRefreshPromise(deferred.promise);
          window.WebFontConfig = {
            custom: {
              families: ['KaTeX_AMS', 'KaTeX_Caligraphic:n4,n7', 'KaTeX_Fraktur:n4,n7', 'KaTeX_Main:n4,n7,i4,i7', 'KaTeX_Math:i4,i7', 'KaTeX_Script', 'KaTeX_SansSerif:n4,n7,i4', 'KaTeX_Size1', 'KaTeX_Size2', 'KaTeX_Size3', 'KaTeX_Size4', 'KaTeX_Typewriter']
            },
            active: () => {
              deferred.resolve();
            }
          };
        },

        getParams({
          getMarkmap
        }) {
          return [_util.defer, getMarkmap];
        }

      }
    }, {
      type: 'script',
      data: {
        src: 'https://cdn.jsdelivr.net/npm/webfontloader@1.6.28/webfontloader.js',
        defer: true
      }
    }]
  };
}